.. index:: pair: group; Status Functions
.. _doxid-group___p_c_m___status:
.. _cid-pcm_status:

Status Functions
================

.. toctree::
	:hidden:



Overview
~~~~~~~~

See the :ref:`PCM (digital audio) interface <doxid-pcm>` page for more details. :ref:`More...<details-doxid-group___p_c_m___status>`

.. _doxid-group___p_c_m___status_1ga24c8a320ba5c66f9b6a605735d33a2ed:
.. _cid-snd_pcm_pack_audio_tstamp_config:
.. _doxid-group___p_c_m___status_1gaf753b32cb55ee05440800d1095f4bdb1:
.. _cid-snd_pcm_unpack_audio_tstamp_report:
.. ref-code-block:: cpp
	:class: overview-code-block

	// global functions

	size_t
	:ref:`snd_pcm_status_sizeof<doxid-group___p_c_m___status_1ga6a8ae2a4786419af7853687a99436d8d>` (void)

	int
	:ref:`snd_pcm_status_malloc<doxid-group___p_c_m___status_1gaa97cf9bdc31e686fe491985486194a64>` (:ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`** ptr)

	void
	:ref:`snd_pcm_status_free<doxid-group___p_c_m___status_1gaeb0a7ff880647e7255cb58904270106b>` (:ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

	void
	:ref:`snd_pcm_status_copy<doxid-group___p_c_m___status_1ga307827ec2057b969520c7508fe41dd63>` (
	    :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* dst,
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* src
	    )

	:ref:`snd_pcm_state_t<doxid-group___p_c_m_1ga61ac499cb3701ce536d4d83725908860>`
	:ref:`snd_pcm_status_get_state<doxid-group___p_c_m___status_1gabaae998f0d374c50195b3206d1e43659>` (const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

	void
	:ref:`snd_pcm_status_get_trigger_tstamp<doxid-group___p_c_m___status_1ga5eaeff98814e96c2ffd5f04c95b22c8d>` (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_timestamp_t<doxid-group___global_1gadd377862d568809fb0e32c9faddf99a4>`* ptr
	    )

	void
	:ref:`snd_pcm_status_get_trigger_htstamp<doxid-group___p_c_m___status_1gab1c832aedb25670d010c53d9081a4b31>` (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_htimestamp_t<doxid-group___global_1ga3a3f5b65c40f498cdbc26944bd9855cf>`* ptr
	    )

	void
	:ref:`snd_pcm_status_get_tstamp<doxid-group___p_c_m___status_1gaea54e0a110afa01dd42071a1ca43902e>` (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_timestamp_t<doxid-group___global_1gadd377862d568809fb0e32c9faddf99a4>`* ptr
	    )

	void
	:ref:`snd_pcm_status_get_htstamp<doxid-group___p_c_m___status_1gafa66bda27a6b914e66e053bb76571013>` (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_htimestamp_t<doxid-group___global_1ga3a3f5b65c40f498cdbc26944bd9855cf>`* ptr
	    )

	void
	:ref:`snd_pcm_status_get_audio_htstamp<doxid-group___p_c_m___status_1ga15d17e74f3352e189df5ccd4cc4c116d>` (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_htimestamp_t<doxid-group___global_1ga3a3f5b65c40f498cdbc26944bd9855cf>`* ptr
	    )

	void
	:ref:`snd_pcm_status_get_driver_htstamp<doxid-group___p_c_m___status_1ga6ee47c7a98005629ec691eae4b7f1b0e>` (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_htimestamp_t<doxid-group___global_1ga3a3f5b65c40f498cdbc26944bd9855cf>`* ptr
	    )

	void
	:ref:`snd_pcm_status_get_audio_htstamp_report<doxid-group___p_c_m___status_1ga79a7e633c36d79aab76c3b4ee39e1588>` (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_pcm_audio_tstamp_report_t<doxid-structsnd__pcm__audio__tstamp__report__t>`* audio_tstamp_report
	    )

	void
	:ref:`snd_pcm_status_set_audio_htstamp_config<doxid-group___p_c_m___status_1gad0dba60f0f312167755500cb49e24eb3>` (
	    :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_pcm_audio_tstamp_config_t<doxid-structsnd__pcm__audio__tstamp__config__t>`* audio_tstamp_config
	    )

	static
	void
	snd_pcm_pack_audio_tstamp_config (
	    unsigned int* data,
	    :ref:`snd_pcm_audio_tstamp_config_t<doxid-structsnd__pcm__audio__tstamp__config__t>`* config
	    )

	static
	void
	snd_pcm_unpack_audio_tstamp_report (
	    unsigned int data,
	    unsigned int accuracy,
	    :ref:`snd_pcm_audio_tstamp_report_t<doxid-structsnd__pcm__audio__tstamp__report__t>`* report
	    )

	:ref:`snd_pcm_sframes_t<doxid-group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c>`
	:ref:`snd_pcm_status_get_delay<doxid-group___p_c_m___status_1ga1fdce3985e64f66385a5805da1110f18>` (const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

	:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`
	:ref:`snd_pcm_status_get_avail<doxid-group___p_c_m___status_1ga91c110525060b925ad4f0c21c205b757>` (const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

	:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`
	:ref:`snd_pcm_status_get_avail_max<doxid-group___p_c_m___status_1gac58d13e4d03c9420c57428ddffd94964>` (const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

	:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`
	:ref:`snd_pcm_status_get_overrange<doxid-group___p_c_m___status_1ga3f4bfd0a0327529abaa621b248b6b1aa>` (const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

	// macros

	#define :ref:`snd_pcm_status_alloca<doxid-group___p_c_m___status_1ga046c09e5d14b684d9fefd70a12cdde1a>`(ptr)

.. _details-doxid-group___p_c_m___status:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

See the :ref:`PCM (digital audio) interface <doxid-pcm>` page for more details.

Global Functions
----------------

.. _doxid-group___p_c_m___status_1ga6a8ae2a4786419af7853687a99436d8d:
.. _cid-snd_pcm_status_sizeof:
.. ref-code-block:: cpp
	:class: title-code-block

	size_t
	snd_pcm_status_sizeof (void)

get size of :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`



.. rubric:: Returns:

size in bytes

.. _doxid-group___p_c_m___status_1gaa97cf9bdc31e686fe491985486194a64:
.. _cid-snd_pcm_status_malloc:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_pcm_status_malloc (:ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`** ptr)

allocate an invalid :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>` using standard malloc



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - ptr

        - returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. _doxid-group___p_c_m___status_1gaeb0a7ff880647e7255cb58904270106b:
.. _cid-snd_pcm_status_free:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_pcm_status_free (:ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

frees a previously allocated :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - pointer to object to free

.. _doxid-group___p_c_m___status_1ga307827ec2057b969520c7508fe41dd63:
.. _cid-snd_pcm_status_copy:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_pcm_status_copy (
	    :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* dst,
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* src
	    )

copy one :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>` to another



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - dst

        - pointer to destination

    *
        - src

        - pointer to source

.. _doxid-group___p_c_m___status_1gabaae998f0d374c50195b3206d1e43659:
.. _cid-snd_pcm_status_get_state:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`snd_pcm_state_t<doxid-group___p_c_m_1ga61ac499cb3701ce536d4d83725908860>`
	snd_pcm_status_get_state (const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

Get state from a PCM status container (see :ref:`snd_pcm_state <doxid-group___p_c_m_1ga87896f6f17020fc19835790369e7ce75>` )



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>` pointer



.. rubric:: Returns:

PCM state

.. _doxid-group___p_c_m___status_1ga5eaeff98814e96c2ffd5f04c95b22c8d:
.. _cid-snd_pcm_status_get_trigger_tstamp:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_pcm_status_get_trigger_tstamp (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_timestamp_t<doxid-group___global_1gadd377862d568809fb0e32c9faddf99a4>`* ptr
	    )

Get trigger timestamp from a PCM status container.

Trigger means a PCM state transition (from stopped to running or versa vice). It applies also to pause and suspend. In other words, timestamp contains time when stream started or when it was stopped.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>` pointer

    *
        - ptr

        - Pointer to returned timestamp

.. _doxid-group___p_c_m___status_1gab1c832aedb25670d010c53d9081a4b31:
.. _cid-snd_pcm_status_get_trigger_htstamp:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_pcm_status_get_trigger_htstamp (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_htimestamp_t<doxid-group___global_1ga3a3f5b65c40f498cdbc26944bd9855cf>`* ptr
	    )

Get trigger hi-res timestamp from a PCM status container.

Trigger means a PCM state transition (from stopped to running or versa vice). It applies also to pause and suspend. In other words, timestamp contains time when stream started or when it was stopped.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>` pointer

    *
        - ptr

        - Pointer to returned timestamp

.. _doxid-group___p_c_m___status_1gaea54e0a110afa01dd42071a1ca43902e:
.. _cid-snd_pcm_status_get_tstamp:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_pcm_status_get_tstamp (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_timestamp_t<doxid-group___global_1gadd377862d568809fb0e32c9faddf99a4>`* ptr
	    )

Get "now" timestamp from a PCM status container.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>` pointer

    *
        - ptr

        - Pointer to returned timestamp

.. _doxid-group___p_c_m___status_1gafa66bda27a6b914e66e053bb76571013:
.. _cid-snd_pcm_status_get_htstamp:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_pcm_status_get_htstamp (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_htimestamp_t<doxid-group___global_1ga3a3f5b65c40f498cdbc26944bd9855cf>`* ptr
	    )

Get "now" hi-res timestamp from a PCM status container.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - pointer to :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`

    *
        - ptr

        - Pointer to returned timestamp

.. _doxid-group___p_c_m___status_1ga15d17e74f3352e189df5ccd4cc4c116d:
.. _cid-snd_pcm_status_get_audio_htstamp:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_pcm_status_get_audio_htstamp (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_htimestamp_t<doxid-group___global_1ga3a3f5b65c40f498cdbc26944bd9855cf>`* ptr
	    )

Get "now" hi-res audio timestamp from a PCM status container.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - pointer to :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`

    *
        - ptr

        - Pointer to returned timestamp

.. _doxid-group___p_c_m___status_1ga6ee47c7a98005629ec691eae4b7f1b0e:
.. _cid-snd_pcm_status_get_driver_htstamp:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_pcm_status_get_driver_htstamp (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_htimestamp_t<doxid-group___global_1ga3a3f5b65c40f498cdbc26944bd9855cf>`* ptr
	    )

Get "now" hi-res driver timestamp from a PCM status container. Defines when the status was generated by driver, may differ from normal timestamp.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - pointer to :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`

    *
        - ptr

        - Pointer to returned timestamp

.. _doxid-group___p_c_m___status_1ga79a7e633c36d79aab76c3b4ee39e1588:
.. _cid-snd_pcm_status_get_audio_htstamp_report:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_pcm_status_get_audio_htstamp_report (
	    const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_pcm_audio_tstamp_report_t<doxid-structsnd__pcm__audio__tstamp__report__t>`* audio_tstamp_report
	    )

Get audio_tstamp_report from a PCM status container.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - pointer to :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`

    *
        - ptr

        - Pointer to returned report (valid fields are accuracy and type)

.. _doxid-group___p_c_m___status_1gad0dba60f0f312167755500cb49e24eb3:
.. _cid-snd_pcm_status_set_audio_htstamp_config:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_pcm_status_set_audio_htstamp_config (
	    :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj,
	    :ref:`snd_pcm_audio_tstamp_config_t<doxid-structsnd__pcm__audio__tstamp__config__t>`* audio_tstamp_config
	    )

set audio_tstamp_config from a PCM status container



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - pointer to :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`

    *
        - ptr

        - Pointer to config (valid fields are type and report_analog_delay)

.. _doxid-group___p_c_m___status_1ga1fdce3985e64f66385a5805da1110f18:
.. _cid-snd_pcm_status_get_delay:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`snd_pcm_sframes_t<doxid-group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c>`
	snd_pcm_status_get_delay (const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

Get delay from a PCM status container (see :ref:`snd_pcm_delay <doxid-group___p_c_m_1ga012e8b999070e72ab23514f25e7d6482>` )

Delay is distance between current application frame position and sound frame position. It's positive and less than buffer size in normal situation, negative on playback underrun and greater than buffer size on capture overrun.



.. rubric:: Returns:

Delay in frames

.. _doxid-group___p_c_m___status_1ga91c110525060b925ad4f0c21c205b757:
.. _cid-snd_pcm_status_get_avail:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`
	snd_pcm_status_get_avail (const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

Get number of frames available from a PCM status container (see :ref:`snd_pcm_avail_update <doxid-group___p_c_m_1ga8bb836bd0c414b59789d51a5f5379c08>` )



.. rubric:: Returns:

Number of frames ready to be read/written

.. _doxid-group___p_c_m___status_1gac58d13e4d03c9420c57428ddffd94964:
.. _cid-snd_pcm_status_get_avail_max:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`
	snd_pcm_status_get_avail_max (const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

Get maximum number of frames available from a PCM status container after last :ref:`snd_pcm_status <doxid-group___p_c_m_1ga32891eaac37741728a9b23027012c892>` call.



.. rubric:: Returns:

Maximum number of frames ready to be read/written

.. _doxid-group___p_c_m___status_1ga3f4bfd0a0327529abaa621b248b6b1aa:
.. _cid-snd_pcm_status_get_overrange:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`
	snd_pcm_status_get_overrange (const :ref:`snd_pcm_status_t<doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>`* obj)

Get count of ADC overrange detections since last call.



.. rubric:: Returns:

Count of ADC overrange detections

Macros
------

.. _doxid-group___p_c_m___status_1ga046c09e5d14b684d9fefd70a12cdde1a:
.. _cid-snd_pcm_status_alloca:
.. ref-code-block:: cpp
	:class: title-code-block

	#define snd_pcm_status_alloca(ptr)

allocate an invalid :ref:`snd_pcm_status_t <doxid-group___p_c_m_1ga902b87281c46910b469d5f7aaafc1890>` using standard alloca



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - ptr

        - returned pointer

