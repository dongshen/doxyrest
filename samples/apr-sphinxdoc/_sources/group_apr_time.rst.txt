.. index:: pair: group; Time Routines
.. _doxid-group__apr__time:
.. _cid-apr_time:

Time Routines
=============

.. toctree::
	:hidden:

	struct_apr_time_exp_t.rst



Overview
~~~~~~~~



.. ref-code-block:: cpp
	:class: overview-code-block

	// typedefs

	typedef apr_int64_t :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>`
	typedef apr_int64_t :ref:`apr_interval_time_t<doxid-group__apr__time_1gaae2129185a395cc393f76fabf4f43e47>`
	typedef apr_int32_t :ref:`apr_short_interval_time_t<doxid-group__apr__time_1ga3e4663cc0d8b730902ff697c8d3f64be>`
	typedef struct :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>` :ref:`apr_time_exp_t<doxid-group__apr__time_1gae28f2767111a534f263ced95a28489b1>`

	// structs

	struct :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>` 

	// global variables

	const char :ref:`apr_month_snames<doxid-group__apr__time_1ga77382d017a2bef80d44478e0b41557a4>`[12][4]
	const char :ref:`apr_day_snames<doxid-group__apr__time_1ga37d6f7740ae0f5d8ae9cfc286e8712be>`[7][4]

	// global functions

	:ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>`
	:ref:`apr_time_now<doxid-group__apr__time_1gac5cb8713d0681d7b809169a222512287>` (void)

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_time_ansi_put<doxid-group__apr__time_1gac2fec71f18b4a286b2e21f0b74fadce8>` (
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>`* result,
	    time_t input
	    )

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_time_exp_tz<doxid-group__apr__time_1gaaf3b8ba123feaa0af5a5975b9a8ab8b1>` (
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* result,
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>` input,
	    apr_int32_t offs
	    )

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_time_exp_gmt<doxid-group__apr__time_1gafa8bdd3a4500f66866d8dd54bf69fb71>` (
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* result,
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>` input
	    )

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_time_exp_lt<doxid-group__apr__time_1ga34d3b9858de1d3111a4b2ff936ada7f6>` (
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* result,
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>` input
	    )

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_time_exp_get<doxid-group__apr__time_1gac13166685922464d9848bda469e0b3b7>` (
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>`* result,
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* input
	    )

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_time_exp_gmt_get<doxid-group__apr__time_1ga0f9fdeae48a45662cb3f198d06c743f0>` (
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>`* result,
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* input
	    )

	void
	:ref:`apr_sleep<doxid-group__apr__time_1ga8ffddc239a3d8051d9972cee080fd761>` (:ref:`apr_interval_time_t<doxid-group__apr__time_1gaae2129185a395cc393f76fabf4f43e47>` t)

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_rfc822_date<doxid-group__apr__time_1gad77b323dd4402ac89c51240f19015df5>` (
	    char* date_str,
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>` t
	    )

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_ctime<doxid-group__apr__time_1gad1fcb8f26d508fbb34ea2beca7bc851e>` (
	    char* date_str,
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>` t
	    )

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_strftime<doxid-group__apr__time_1ga3f5e1aa45e735f3bcf8c13fb718c214f>` (
	    char* s,
	    apr_size_t* retsize,
	    apr_size_t max,
	    const char* format,
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* tm
	    )

	void
	:ref:`apr_time_clock_hires<doxid-group__apr__time_1gac47e0b54f17857f0ce2925b2930b5500>` (:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p)

	// macros

	#define :ref:`APR_CTIME_LEN<doxid-group__apr__time_1ga0bd804145d3954f45a6962e9dd10f220>`
	#define :ref:`APR_RFC822_DATE_LEN<doxid-group__apr__time_1ga33933cf7a3e3c2cf6082c5f6d22ca3e5>`
	#define :ref:`APR_TIME_C<doxid-group__apr__time_1gab0d08005432bbda78e03bcd2e235e7d3>`(val)
	#define :ref:`APR_TIME_T_FMT<doxid-group__apr__time_1gaad2d372b64a68d96b1e4c5f1173eb2c7>`
	#define :ref:`APR_USEC_PER_SEC<doxid-group__apr__time_1gab4dd3f3015d25a50f3be3e0e91043abf>`
	#define :ref:`apr_time_as_msec<doxid-group__apr__time_1ga0ab989e84c18e63d36e653aab2821691>`(time)
	#define :ref:`apr_time_from_msec<doxid-group__apr__time_1ga9530ae08ce10e2d653f4e7dc8b14ad00>`(msec)
	#define :ref:`apr_time_from_sec<doxid-group__apr__time_1gaec56c2c03299a750006bfcc08d64ec32>`(sec)

	#define :ref:`apr_time_make<doxid-group__apr__time_1ga47e8d04826e56b6ce39ed082d33abc38>`( \
	    sec, \
	    usec \
	    )

	#define :ref:`apr_time_msec<doxid-group__apr__time_1ga05d6c6ea507b74605aa2149a4410076f>`(time)
	#define :ref:`apr_time_sec<doxid-group__apr__time_1gae0237f70a9a3206b5263c0a474219476>`(time)
	#define :ref:`apr_time_usec<doxid-group__apr__time_1gae842c7b471ccf0dc691eb2ff3cc8fc8e>`(time)

.. _details-doxid-group__apr__time:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Typedefs
--------

.. _doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb:
.. _cid-apr_time_t:
.. ref-code-block:: cpp
	:class: title-code-block

	typedef apr_int64_t apr_time_t

number of microseconds since 00:00:00 January 1, 1970 UTC

.. _doxid-group__apr__time_1gaae2129185a395cc393f76fabf4f43e47:
.. _cid-apr_interval_time_t:
.. ref-code-block:: cpp
	:class: title-code-block

	typedef apr_int64_t apr_interval_time_t

intervals for I/O timeouts, in microseconds

.. _doxid-group__apr__time_1ga3e4663cc0d8b730902ff697c8d3f64be:
.. _cid-apr_short_interval_time_t:
.. ref-code-block:: cpp
	:class: title-code-block

	typedef apr_int32_t apr_short_interval_time_t

short interval for I/O timeouts, in microseconds

.. _doxid-group__apr__time_1gae28f2767111a534f263ced95a28489b1:
.. _cid-apr_time_exp_t-2:
.. ref-code-block:: cpp
	:class: title-code-block

	typedef struct :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>` apr_time_exp_t



.. rubric:: See also:

:ref:`apr_time_exp_t <doxid-structapr__time__exp__t>`

Global Variables
----------------

.. _doxid-group__apr__time_1ga77382d017a2bef80d44478e0b41557a4:
.. _cid-apr_month_snames:
.. ref-code-block:: cpp
	:class: title-code-block

	const char apr_month_snames [12][4]

month names

.. _doxid-group__apr__time_1ga37d6f7740ae0f5d8ae9cfc286e8712be:
.. _cid-apr_day_snames:
.. ref-code-block:: cpp
	:class: title-code-block

	const char apr_day_snames [7][4]

day names

Global Functions
----------------

.. _doxid-group__apr__time_1gac5cb8713d0681d7b809169a222512287:
.. _cid-apr_time_now:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>`
	apr_time_now (void)



.. rubric:: Returns:

the current time

.. _doxid-group__apr__time_1gac2fec71f18b4a286b2e21f0b74fadce8:
.. _cid-apr_time_ansi_put:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_time_ansi_put (
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>`* result,
	    time_t input
	    )

Convert an ansi time_t to an apr_time_t



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - result

        - the resulting apr_time_t

    *
        - input

        - the time_t to convert

.. _doxid-group__apr__time_1gaaf3b8ba123feaa0af5a5975b9a8ab8b1:
.. _cid-apr_time_exp_tz:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_time_exp_tz (
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* result,
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>` input,
	    apr_int32_t offs
	    )

Convert a time to its human readable components using an offset from GMT.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - result

        - the exploded time

    *
        - input

        - the time to explode

    *
        - offs

        - the number of seconds offset to apply

.. _doxid-group__apr__time_1gafa8bdd3a4500f66866d8dd54bf69fb71:
.. _cid-apr_time_exp_gmt:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_time_exp_gmt (
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* result,
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>` input
	    )

Convert a time to its human readable components (GMT).



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - result

        - the exploded time

    *
        - input

        - the time to explode

.. _doxid-group__apr__time_1ga34d3b9858de1d3111a4b2ff936ada7f6:
.. _cid-apr_time_exp_lt:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_time_exp_lt (
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* result,
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>` input
	    )

Convert a time to its human readable components in the local timezone.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - result

        - the exploded time

    *
        - input

        - the time to explode

.. _doxid-group__apr__time_1gac13166685922464d9848bda469e0b3b7:
.. _cid-apr_time_exp_get:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_time_exp_get (
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>`* result,
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* input
	    )

Convert time value from human readable format to a numeric apr_time_t (elapsed microseconds since the epoch).



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - result

        - the resulting imploded time

    *
        - input

        - the input exploded time

.. _doxid-group__apr__time_1ga0f9fdeae48a45662cb3f198d06c743f0:
.. _cid-apr_time_exp_gmt_get:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_time_exp_gmt_get (
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>`* result,
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* input
	    )

Convert time value from human readable format to a numeric apr_time_t that always represents GMT.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - result

        - the resulting imploded time

    *
        - input

        - the input exploded time

.. _doxid-group__apr__time_1ga8ffddc239a3d8051d9972cee080fd761:
.. _cid-apr_sleep:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	apr_sleep (:ref:`apr_interval_time_t<doxid-group__apr__time_1gaae2129185a395cc393f76fabf4f43e47>` t)

Sleep for the specified number of micro-seconds. May sleep for longer than the specified time.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - t

        - desired amount of time to sleep.

.. _doxid-group__apr__time_1gad77b323dd4402ac89c51240f19015df5:
.. _cid-apr_rfc822_date:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_rfc822_date (
	    char* date_str,
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>` t
	    )

apr_rfc822_date formats dates in the RFC822 format in an efficient manner. It is a fixed length format which requires APR_RFC822_DATA_LEN bytes of storage, including the trailing NUL terminator.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - date_str

        - String to write to.

    *
        - t

        - the time to convert

.. _doxid-group__apr__time_1gad1fcb8f26d508fbb34ea2beca7bc851e:
.. _cid-apr_ctime:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_ctime (
	    char* date_str,
	    :ref:`apr_time_t<doxid-group__apr__time_1gadb4bde16055748190eae190c55aa02bb>` t
	    )

apr_ctime formats dates in the ctime() format in an efficient manner. It is a fixed length format and requires APR_CTIME_LEN bytes of storage including the trailing NUL terminator. Unlike ANSI/ISO C ctime(), :ref:`apr_ctime() <doxid-group__apr__time_1gad1fcb8f26d508fbb34ea2beca7bc851e>` does not include a \n at the end of the string.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - date_str

        - String to write to.

    *
        - t

        - the time to convert

.. _doxid-group__apr__time_1ga3f5e1aa45e735f3bcf8c13fb718c214f:
.. _cid-apr_strftime:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_strftime (
	    char* s,
	    apr_size_t* retsize,
	    apr_size_t max,
	    const char* format,
	    :ref:`apr_time_exp_t<doxid-structapr__time__exp__t>`* tm
	    )

Formats the exploded time according to the format specified



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - s

        - string to write to

    *
        - retsize

        - The length of the returned string

    *
        - max

        - The maximum length of the string

    *
        - format

        - The format for the time string

    *
        - tm

        - The time to convert

.. _doxid-group__apr__time_1gac47e0b54f17857f0ce2925b2930b5500:
.. _cid-apr_time_clock_hires:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	apr_time_clock_hires (:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p)

Improve the clock resolution for the lifetime of the given pool. Generally this is only desirable on benchmarking and other very time-sensitive applications, and has no impact on most platforms.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - p

        - The pool to associate the finer clock resolution

Macros
------

.. _doxid-group__apr__time_1ga0bd804145d3954f45a6962e9dd10f220:
.. _cid-apr_ctime_len:
.. ref-code-block:: cpp
	:class: title-code-block

	#define APR_CTIME_LEN

length of a CTIME date

.. _doxid-group__apr__time_1ga33933cf7a3e3c2cf6082c5f6d22ca3e5:
.. _cid-apr_rfc822_date_len:
.. ref-code-block:: cpp
	:class: title-code-block

	#define APR_RFC822_DATE_LEN

length of a RFC822 Date

.. _doxid-group__apr__time_1gab0d08005432bbda78e03bcd2e235e7d3:
.. _cid-apr_time_c:
.. ref-code-block:: cpp
	:class: title-code-block

	#define APR_TIME_C(val)

mechanism to properly type apr_time_t literals

.. _doxid-group__apr__time_1gaad2d372b64a68d96b1e4c5f1173eb2c7:
.. _cid-apr_time_t_fmt:
.. ref-code-block:: cpp
	:class: title-code-block

	#define APR_TIME_T_FMT

mechanism to properly print apr_time_t values

.. _doxid-group__apr__time_1gab4dd3f3015d25a50f3be3e0e91043abf:
.. _cid-apr_usec_per_sec:
.. ref-code-block:: cpp
	:class: title-code-block

	#define APR_USEC_PER_SEC

number of microseconds per second

.. _doxid-group__apr__time_1ga0ab989e84c18e63d36e653aab2821691:
.. _cid-apr_time_as_msec:
.. ref-code-block:: cpp
	:class: title-code-block

	#define apr_time_as_msec(time)



.. rubric:: Returns:

apr_time_t as a msec

.. _doxid-group__apr__time_1ga9530ae08ce10e2d653f4e7dc8b14ad00:
.. _cid-apr_time_from_msec:
.. ref-code-block:: cpp
	:class: title-code-block

	#define apr_time_from_msec(msec)



.. rubric:: Returns:

milliseconds as an apr_time_t

.. _doxid-group__apr__time_1gaec56c2c03299a750006bfcc08d64ec32:
.. _cid-apr_time_from_sec:
.. ref-code-block:: cpp
	:class: title-code-block

	#define apr_time_from_sec(sec)



.. rubric:: Returns:

seconds as an apr_time_t

.. _doxid-group__apr__time_1ga47e8d04826e56b6ce39ed082d33abc38:
.. _cid-apr_time_make:
.. ref-code-block:: cpp
	:class: title-code-block

	#define apr_time_make( \
	    sec, \
	    usec \
	    )



.. rubric:: Returns:

a second and usec combination as an apr_time_t

.. _doxid-group__apr__time_1ga05d6c6ea507b74605aa2149a4410076f:
.. _cid-apr_time_msec:
.. ref-code-block:: cpp
	:class: title-code-block

	#define apr_time_msec(time)



.. rubric:: Returns:

apr_time_t as a msec

.. _doxid-group__apr__time_1gae0237f70a9a3206b5263c0a474219476:
.. _cid-apr_time_sec:
.. ref-code-block:: cpp
	:class: title-code-block

	#define apr_time_sec(time)



.. rubric:: Returns:

apr_time_t as a second

.. _doxid-group__apr__time_1gae842c7b471ccf0dc691eb2ff3cc8fc8e:
.. _cid-apr_time_usec:
.. ref-code-block:: cpp
	:class: title-code-block

	#define apr_time_usec(time)



.. rubric:: Returns:

apr_time_t as a usec

