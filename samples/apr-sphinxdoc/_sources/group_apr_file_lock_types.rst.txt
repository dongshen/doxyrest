.. index:: pair: group; File Lock Types
.. _doxid-group__apr__file__lock__types:
.. _cid-apr_file_lock_types:

File Lock Types
===============

.. toctree::
	:hidden:



Overview
~~~~~~~~



.. ref-code-block:: cpp
	:class: overview-code-block

	// macros

	#define :ref:`APR_FLOCK_EXCLUSIVE<doxid-group__apr__file__lock__types_1gafbf0caa093b99bdf11e25360b9099852>`
	#define :ref:`APR_FLOCK_NONBLOCK<doxid-group__apr__file__lock__types_1gab327fa0250e19006f20d5ec65fe7f22a>`
	#define :ref:`APR_FLOCK_SHARED<doxid-group__apr__file__lock__types_1gaba177fe81cd70b389753ad2096b2ce7c>`
	#define :ref:`APR_FLOCK_TYPEMASK<doxid-group__apr__file__lock__types_1ga40777e364fb20bb9a9ee57e74b19c13d>`

.. _details-doxid-group__apr__file__lock__types:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Macros
------

.. _doxid-group__apr__file__lock__types_1gafbf0caa093b99bdf11e25360b9099852:
.. _cid-apr_flock_exclusive:
.. ref-code-block:: cpp
	:class: title-code-block

	#define APR_FLOCK_EXCLUSIVE

Exclusive lock. Only one process may hold an exclusive lock at any given time. This is analogous to a "write lock".

.. _doxid-group__apr__file__lock__types_1gab327fa0250e19006f20d5ec65fe7f22a:
.. _cid-apr_flock_nonblock:
.. ref-code-block:: cpp
	:class: title-code-block

	#define APR_FLOCK_NONBLOCK

do not block while acquiring the file lock

.. _doxid-group__apr__file__lock__types_1gaba177fe81cd70b389753ad2096b2ce7c:
.. _cid-apr_flock_shared:
.. ref-code-block:: cpp
	:class: title-code-block

	#define APR_FLOCK_SHARED

Shared lock. More than one process or thread can hold a shared lock at any given time. Essentially, this is a "read lock", preventing writers from establishing an exclusive lock.

.. _doxid-group__apr__file__lock__types_1ga40777e364fb20bb9a9ee57e74b19c13d:
.. _cid-apr_flock_typemask:
.. ref-code-block:: cpp
	:class: title-code-block

	#define APR_FLOCK_TYPEMASK

mask to extract lock type

