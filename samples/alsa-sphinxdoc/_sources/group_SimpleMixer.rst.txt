.. index:: pair: group; Simple Mixer Interface
.. _doxid-group___simple_mixer:
.. _cid-simplemixer:

Simple Mixer Interface
======================

.. toctree::
	:hidden:

	enum_snd_mixer_selem_channel_id_t.rst
	enum_snd_mixer_selem_regopt_abstract.rst
	struct_snd_mixer_selem_regopt.rst



Overview
~~~~~~~~

The simple mixer interface. :ref:`More...<details-doxid-group___simple_mixer>`

.. ref-code-block:: cpp
	:class: overview-code-block

	// typedefs

	typedef struct _snd_mixer_selem_id :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`

	// enums

	enum :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>`
	enum :ref:`snd_mixer_selem_regopt_abstract<doxid-group___simple_mixer_1gab7031d53c3876396c9880631813979c2>`

	// structs

	struct :ref:`snd_mixer_selem_regopt<doxid-structsnd__mixer__selem__regopt>` 

	// global functions

	const char*
	:ref:`snd_mixer_selem_channel_name<doxid-group___simple_mixer_1ga37ae8c6874d975efa83a9074a28113b9>` (:ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel)

	int
	:ref:`snd_mixer_selem_register<doxid-group___simple_mixer_1gadd686db0b7d2bba9a88112b732b147d0>` (
	    :ref:`snd_mixer_t<doxid-group___mixer_1ga34161447bc01a64f578456ed13d57e33>`* mixer,
	    struct :ref:`snd_mixer_selem_regopt<doxid-structsnd__mixer__selem__regopt>`* options,
	    :ref:`snd_mixer_class_t<doxid-group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f>`** classp
	    )

	void
	:ref:`snd_mixer_selem_get_id<doxid-group___simple_mixer_1ga02aba43d5ae75392b6344c7f8f92fe72>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* element,
	    :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* id
	    )

	const char*
	:ref:`snd_mixer_selem_get_name<doxid-group___simple_mixer_1ga51329fb3fea12d50209fcf8ebf542492>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	unsigned int
	:ref:`snd_mixer_selem_get_index<doxid-group___simple_mixer_1ga11a14cd0d589033d49647d27e12b9cc1>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`*
	:ref:`snd_mixer_find_selem<doxid-group___simple_mixer_1gad9b0c9a6d7956f95132aa42857d962cb>` (
	    :ref:`snd_mixer_t<doxid-group___mixer_1ga34161447bc01a64f578456ed13d57e33>`* mixer,
	    const :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* id
	    )

	int
	:ref:`snd_mixer_selem_is_active<doxid-group___simple_mixer_1ga41eb6c6d7a237dc617115ba4ba91ffbd>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_is_playback_mono<doxid-group___simple_mixer_1gacdc9e474bb45ca6759a2f9ea878bc1a4>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_playback_channel<doxid-group___simple_mixer_1ga621b34fc2c4f47a28fb9b34a3dd820e7>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* obj,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel
	    )

	int
	:ref:`snd_mixer_selem_is_capture_mono<doxid-group___simple_mixer_1gadc4c2179abd18d7c587cc199bb8e9273>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_capture_channel<doxid-group___simple_mixer_1gac05de257374bae60c03ba033344f811e>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* obj,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel
	    )

	int
	:ref:`snd_mixer_selem_get_capture_group<doxid-group___simple_mixer_1gae75b0133e7beba016589259b30cf8e7b>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_common_volume<doxid-group___simple_mixer_1ga08c4099ef62508d5ae7f13bd6affd5a5>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_playback_volume<doxid-group___simple_mixer_1ga17468934f36929ae2f7af4850f40f851>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_playback_volume_joined<doxid-group___simple_mixer_1gaf39321d4b7bb2efac3a3af357e42c6eb>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_capture_volume<doxid-group___simple_mixer_1ga095d73eab22ef19cabed8732ffc44a7b>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_capture_volume_joined<doxid-group___simple_mixer_1ga1646edce83681e786da2f1a6befaf113>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_common_switch<doxid-group___simple_mixer_1ga468e0188282093c377776683bcea20d4>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_playback_switch<doxid-group___simple_mixer_1ga4efd34d5ccb384e8db4291bd3aad0760>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_playback_switch_joined<doxid-group___simple_mixer_1ga162fa35b3cc76e67c14482a2f6b734c1>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_capture_switch<doxid-group___simple_mixer_1ga6761e23f215d3d048c729a22cfdd952a>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_capture_switch_joined<doxid-group___simple_mixer_1ga14a6a278ef91593d3c6fc53007627d25>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_has_capture_switch_exclusive<doxid-group___simple_mixer_1ga1ad2e8afe6f5ad7857b0bdc70048d44d>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_ask_playback_vol_dB<doxid-group___simple_mixer_1gac8e2c7d0555f58ec790443da87ecbae3>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value,
	    long* dBvalue
	    )

	int
	:ref:`snd_mixer_selem_ask_capture_vol_dB<doxid-group___simple_mixer_1ga87dcbf4b28ba67c8a07cdd79231b9942>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value,
	    long* dBvalue
	    )

	int
	:ref:`snd_mixer_selem_ask_playback_dB_vol<doxid-group___simple_mixer_1ga3bf17ce7cb933fa69973cb69ca079f13>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long dBvalue,
	    int dir,
	    long* value
	    )

	int
	:ref:`snd_mixer_selem_ask_capture_dB_vol<doxid-group___simple_mixer_1ga40141aa00e0839bdfa8398b5aac1a0a6>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long dBvalue,
	    int dir,
	    long* value
	    )

	int
	:ref:`snd_mixer_selem_get_playback_volume<doxid-group___simple_mixer_1ga12f6f4124bf45db95f965298c2f318bb>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long* value
	    )

	int
	:ref:`snd_mixer_selem_get_capture_volume<doxid-group___simple_mixer_1ga3b15557f590f136735a4abee96cf28fd>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long* value
	    )

	int
	:ref:`snd_mixer_selem_get_playback_dB<doxid-group___simple_mixer_1ga6b5799e7971688e1f2e9ccf977c8a887>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long* value
	    )

	int
	:ref:`snd_mixer_selem_get_capture_dB<doxid-group___simple_mixer_1ga27bf2c4bd591bcf61b3fe20353bac8da>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long* value
	    )

	int
	:ref:`snd_mixer_selem_get_playback_switch<doxid-group___simple_mixer_1ga55a4f32e711efe4ef09cf041d9fc27f0>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    int* value
	    )

	int
	:ref:`snd_mixer_selem_get_capture_switch<doxid-group___simple_mixer_1ga49f4c3b98ef2353cdaa582e5bf3417a1>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    int* value
	    )

	int
	:ref:`snd_mixer_selem_set_playback_volume<doxid-group___simple_mixer_1ga1e4556740beefc8bed40677a316e60ac>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long value
	    )

	int
	:ref:`snd_mixer_selem_set_capture_volume<doxid-group___simple_mixer_1ga8aa6b212e1e092e5d67ff11070a433ad>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long value
	    )

	int
	:ref:`snd_mixer_selem_set_playback_dB<doxid-group___simple_mixer_1ga8bfb52575e4bb06deb30799bc39c0768>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long value,
	    int dir
	    )

	int
	:ref:`snd_mixer_selem_set_capture_dB<doxid-group___simple_mixer_1gac1af2ccb94c19e7f616338791707c2eb>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long value,
	    int dir
	    )

	int
	:ref:`snd_mixer_selem_set_playback_volume_all<doxid-group___simple_mixer_1ga2567351a2a7a70e6dda81f5ccc38d04b>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value
	    )

	int
	:ref:`snd_mixer_selem_set_capture_volume_all<doxid-group___simple_mixer_1ga0e6e40f799c9a4042444a4e26194d451>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value
	    )

	int
	:ref:`snd_mixer_selem_set_playback_dB_all<doxid-group___simple_mixer_1ga555df8c54f170ebe7f389eb7a8d04cc9>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value,
	    int dir
	    )

	int
	:ref:`snd_mixer_selem_set_capture_dB_all<doxid-group___simple_mixer_1ga395321949ec6444ca4590f0ca3eac6b0>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value,
	    int dir
	    )

	int
	:ref:`snd_mixer_selem_set_playback_switch<doxid-group___simple_mixer_1ga1a9b7c48b94d8cbeffc6847f3b884dcc>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    int value
	    )

	int
	:ref:`snd_mixer_selem_set_capture_switch<doxid-group___simple_mixer_1ga3de8f16807b23cdf9399f86a5eb3a353>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    int value
	    )

	int
	:ref:`snd_mixer_selem_set_playback_switch_all<doxid-group___simple_mixer_1gaa3e28640247b4eef389269b92f5b4a9d>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    int value
	    )

	int
	:ref:`snd_mixer_selem_set_capture_switch_all<doxid-group___simple_mixer_1gad43024c7d21c38cde7b440cdc6a85c07>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    int value
	    )

	int
	:ref:`snd_mixer_selem_get_playback_volume_range<doxid-group___simple_mixer_1ga09557e90c11fbd37aeed30938338698b>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long* min,
	    long* max
	    )

	int
	:ref:`snd_mixer_selem_get_playback_dB_range<doxid-group___simple_mixer_1gad874cffabe541956b610858bcb38ba59>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long* min,
	    long* max
	    )

	int
	:ref:`snd_mixer_selem_set_playback_volume_range<doxid-group___simple_mixer_1gaf4b095372a07bcdf769d74fa73c803d5>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long min,
	    long max
	    )

	int
	:ref:`snd_mixer_selem_get_capture_volume_range<doxid-group___simple_mixer_1ga95e2624e7aaa7624e89121ce3f63b9dd>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long* min,
	    long* max
	    )

	int
	:ref:`snd_mixer_selem_get_capture_dB_range<doxid-group___simple_mixer_1ga332241fcda7a9364b4d7830b592ba6a5>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long* min,
	    long* max
	    )

	int
	:ref:`snd_mixer_selem_set_capture_volume_range<doxid-group___simple_mixer_1ga608663233daecd6b373aba808f5fc427>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long min,
	    long max
	    )

	int
	:ref:`snd_mixer_selem_is_enumerated<doxid-group___simple_mixer_1gab367abc11dae3681978c2f831afd1e37>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_is_enum_playback<doxid-group___simple_mixer_1gaed68ad405d2c2e9447e2fa1d4f5d1107>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_is_enum_capture<doxid-group___simple_mixer_1ga90c5c5c0428fd0d6722c5a84348a39b0>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_get_enum_items<doxid-group___simple_mixer_1gab803bca4a9c322e1efe87950b62431b3>` (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

	int
	:ref:`snd_mixer_selem_get_enum_item_name<doxid-group___simple_mixer_1gacbae7ca76dc02dd172c80f8f704dd8c9>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    unsigned int idx,
	    size_t maxlen,
	    char* str
	    )

	int
	:ref:`snd_mixer_selem_get_enum_item<doxid-group___simple_mixer_1ga6679dc52033e29b88da32f5bbd45f205>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    unsigned int* idxp
	    )

	int
	:ref:`snd_mixer_selem_set_enum_item<doxid-group___simple_mixer_1gadcba6291c0382676ee442311c0ff1a8f>` (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    unsigned int idx
	    )

	size_t
	:ref:`snd_mixer_selem_id_sizeof<doxid-group___simple_mixer_1ga29705a6b18fe910d2b7aeb98531d5056>` (void)

	int
	:ref:`snd_mixer_selem_id_malloc<doxid-group___simple_mixer_1gac48d80bc60d03959c43a3ec6caca8498>` (:ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`** ptr)

	void
	:ref:`snd_mixer_selem_id_free<doxid-group___simple_mixer_1ga2a6f790706e3ed64e1fb0f61177d13c5>` (:ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* obj)

	void
	:ref:`snd_mixer_selem_id_copy<doxid-group___simple_mixer_1ga089d6e51b1b92fb51ff2cb771071a169>` (
	    :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* dst,
	    const :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* src
	    )

	const char*
	:ref:`snd_mixer_selem_id_get_name<doxid-group___simple_mixer_1gae54797dd9e4382d67718899047fa1087>` (const :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* obj)

	unsigned int
	:ref:`snd_mixer_selem_id_get_index<doxid-group___simple_mixer_1gabe5105469fa31b85a52253e709733638>` (const :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* obj)

	void
	:ref:`snd_mixer_selem_id_set_name<doxid-group___simple_mixer_1gad127341c44087525e1c715044d7a3919>` (
	    :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* obj,
	    const char* val
	    )

	void
	:ref:`snd_mixer_selem_id_set_index<doxid-group___simple_mixer_1ga02bf0b9758ed4146eec38cd964b7621d>` (
	    :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* obj,
	    unsigned int val
	    )

	// macros

	#define :ref:`snd_mixer_selem_id_alloca<doxid-group___simple_mixer_1gae97a5b8fbc068632409e1459a9476222>`(ptr)

.. _details-doxid-group___simple_mixer:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

The simple mixer interface.

Typedefs
--------

.. _doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee:
.. _cid-snd_mixer_selem_id_t:
.. ref-code-block:: cpp
	:class: title-code-block

	typedef struct _snd_mixer_selem_id snd_mixer_selem_id_t

Mixer simple element identifier

Global Functions
----------------

.. _doxid-group___simple_mixer_1ga37ae8c6874d975efa83a9074a28113b9:
.. _cid-snd_mixer_selem_channel_name:
.. ref-code-block:: cpp
	:class: title-code-block

	const char*
	snd_mixer_selem_channel_name (:ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel)

Return name of mixer simple element channel.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - channel

        - mixer simple element channel identifier



.. rubric:: Returns:

channel name

.. _doxid-group___simple_mixer_1gadd686db0b7d2bba9a88112b732b147d0:
.. _cid-snd_mixer_selem_register:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_register (
	    :ref:`snd_mixer_t<doxid-group___mixer_1ga34161447bc01a64f578456ed13d57e33>`* mixer,
	    struct :ref:`snd_mixer_selem_regopt<doxid-structsnd__mixer__selem__regopt>`* options,
	    :ref:`snd_mixer_class_t<doxid-group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f>`** classp
	    )

Register mixer simple element class.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - mixer

        - Mixer handle

    *
        - options

        - Options container

    *
        - classp

        - Pointer to returned mixer simple element class handle (or NULL)



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga02aba43d5ae75392b6344c7f8f92fe72:
.. _cid-snd_mixer_selem_get_id:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_mixer_selem_get_id (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* element,
	    :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* id
	    )

Get mixer simple element identifier.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - id

        - returned mixer simple element identifier

.. _doxid-group___simple_mixer_1ga51329fb3fea12d50209fcf8ebf542492:
.. _cid-snd_mixer_selem_get_name:
.. ref-code-block:: cpp
	:class: title-code-block

	const char*
	snd_mixer_selem_get_name (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Get name part of mixer simple element identifier.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

name part of simple element identifier

.. _doxid-group___simple_mixer_1ga11a14cd0d589033d49647d27e12b9cc1:
.. _cid-snd_mixer_selem_get_index:
.. ref-code-block:: cpp
	:class: title-code-block

	unsigned int
	snd_mixer_selem_get_index (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Get index part of mixer simple element identifier.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

index part of simple element identifier

.. _doxid-group___simple_mixer_1gad9b0c9a6d7956f95132aa42857d962cb:
.. _cid-snd_mixer_find_selem:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`*
	snd_mixer_find_selem (
	    :ref:`snd_mixer_t<doxid-group___mixer_1ga34161447bc01a64f578456ed13d57e33>`* mixer,
	    const :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* id
	    )

Find a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - mixer

        - Mixer handle

    *
        - id

        - Mixer simple element identifier



.. rubric:: Returns:

mixer simple element handle or NULL if not found

.. _doxid-group___simple_mixer_1ga41eb6c6d7a237dc617115ba4ba91ffbd:
.. _cid-snd_mixer_selem_is_active:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_is_active (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Get info about the active state of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if not active, 1 if active

.. _doxid-group___simple_mixer_1gacdc9e474bb45ca6759a2f9ea878bc1a4:
.. _cid-snd_mixer_selem_is_playback_mono:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_is_playback_mono (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Get info about channels of playback stream of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if not mono, 1 if mono

.. _doxid-group___simple_mixer_1ga621b34fc2c4f47a28fb9b34a3dd820e7:
.. _cid-snd_mixer_selem_has_playback_channel:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_playback_channel (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* obj,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel
	    )

Get info about channels of playback stream of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - Mixer simple element channel identifier



.. rubric:: Returns:

0 if channel is not present, 1 if present

.. _doxid-group___simple_mixer_1gadc4c2179abd18d7c587cc199bb8e9273:
.. _cid-snd_mixer_selem_is_capture_mono:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_is_capture_mono (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Get info about channels of capture stream of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if not mono, 1 if mono

.. _doxid-group___simple_mixer_1gac05de257374bae60c03ba033344f811e:
.. _cid-snd_mixer_selem_has_capture_channel:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_capture_channel (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* obj,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel
	    )

Get info about channels of capture stream of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - Mixer simple element channel identifier



.. rubric:: Returns:

0 if channel is not present, 1 if present

.. _doxid-group___simple_mixer_1gae75b0133e7beba016589259b30cf8e7b:
.. _cid-snd_mixer_selem_get_capture_group:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_capture_group (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return info about capture switch control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

group for switch exclusivity (see :ref:`snd_mixer_selem_has_capture_switch_exclusive <doxid-group___simple_mixer_1ga1ad2e8afe6f5ad7857b0bdc70048d44d>` )

.. _doxid-group___simple_mixer_1ga08c4099ef62508d5ae7f13bd6affd5a5:
.. _cid-snd_mixer_selem_has_common_volume:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_common_volume (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return true if mixer simple element has only one volume control for both playback and capture.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 separated control, 1 common control

.. _doxid-group___simple_mixer_1ga17468934f36929ae2f7af4850f40f851:
.. _cid-snd_mixer_selem_has_playback_volume:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_playback_volume (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return info about playback volume control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if no control is present, 1 if it's present

.. _doxid-group___simple_mixer_1gaf39321d4b7bb2efac3a3af357e42c6eb:
.. _cid-snd_mixer_selem_has_playback_volume_joined:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_playback_volume_joined (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return info about playback volume control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if control is separated per channel, 1 if control acts on all channels together

.. _doxid-group___simple_mixer_1ga095d73eab22ef19cabed8732ffc44a7b:
.. _cid-snd_mixer_selem_has_capture_volume:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_capture_volume (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return info about capture volume control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if no control is present, 1 if it's present

.. _doxid-group___simple_mixer_1ga1646edce83681e786da2f1a6befaf113:
.. _cid-snd_mixer_selem_has_capture_volume_joined:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_capture_volume_joined (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return info about capture volume control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if control is separated per channel, 1 if control acts on all channels together

.. _doxid-group___simple_mixer_1ga468e0188282093c377776683bcea20d4:
.. _cid-snd_mixer_selem_has_common_switch:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_common_switch (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return true if mixer simple element has only one switch control for both playback and capture.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 separated control, 1 common control

.. _doxid-group___simple_mixer_1ga4efd34d5ccb384e8db4291bd3aad0760:
.. _cid-snd_mixer_selem_has_playback_switch:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_playback_switch (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return info about playback switch control existence of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if no control is present, 1 if it's present

.. _doxid-group___simple_mixer_1ga162fa35b3cc76e67c14482a2f6b734c1:
.. _cid-snd_mixer_selem_has_playback_switch_joined:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_playback_switch_joined (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return info about playback switch control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if control is separated per channel, 1 if control acts on all channels together

.. _doxid-group___simple_mixer_1ga6761e23f215d3d048c729a22cfdd952a:
.. _cid-snd_mixer_selem_has_capture_switch:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_capture_switch (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return info about capture switch control existence of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if no control is present, 1 if it's present

.. _doxid-group___simple_mixer_1ga14a6a278ef91593d3c6fc53007627d25:
.. _cid-snd_mixer_selem_has_capture_switch_joined:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_capture_switch_joined (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return info about capture switch control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if control is separated per channel, 1 if control acts on all channels together

.. _doxid-group___simple_mixer_1ga1ad2e8afe6f5ad7857b0bdc70048d44d:
.. _cid-snd_mixer_selem_has_capture_switch_exclusive:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_has_capture_switch_exclusive (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return info about capture switch control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 if control is separated per element, 1 if control acts on other elements too (i.e. only one active at a time inside a group)

.. _doxid-group___simple_mixer_1gac8e2c7d0555f58ec790443da87ecbae3:
.. _cid-snd_mixer_selem_ask_playback_vol_db:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_ask_playback_vol_dB (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value,
	    long* dBvalue
	    )

Return corresponding dB value to an integer playback volume for a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - value

        - value to be converted to dB range

    *
        - dBvalue

        - pointer to returned dB value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga87dcbf4b28ba67c8a07cdd79231b9942:
.. _cid-snd_mixer_selem_ask_capture_vol_db:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_ask_capture_vol_dB (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value,
	    long* dBvalue
	    )

Return corresponding dB value to an integer capture volume for a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - value

        - value to be converted to dB range

    *
        - dBvalue

        - pointer to returned dB value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga3bf17ce7cb933fa69973cb69ca079f13:
.. _cid-snd_mixer_selem_ask_playback_db_vol:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_ask_playback_dB_vol (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long dBvalue,
	    int dir,
	    long* value
	    )

Return corresponding integer playback volume for given dB value for a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - value

        - value to be converted to dB range

    *
        - dir

        - rounding mode - rounds up if dir > 0, otherwise rounds down

    *
        - dBvalue

        - pointer to returned dB value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga40141aa00e0839bdfa8398b5aac1a0a6:
.. _cid-snd_mixer_selem_ask_capture_db_vol:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_ask_capture_dB_vol (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long dBvalue,
	    int dir,
	    long* value
	    )

Return corresponding integer capture volume for given dB value for a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - dBvalue

        - dB value to be converted to integer range

    *
        - value

        - pointer to returned integer value

    *
        - dir

        - rounding mode - rounds up if dir > 0, otherwise rounds down



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga12f6f4124bf45db95f965298c2f318bb:
.. _cid-snd_mixer_selem_get_playback_volume:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_playback_volume (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long* value
	    )

Return value of playback volume control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - pointer to returned value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga3b15557f590f136735a4abee96cf28fd:
.. _cid-snd_mixer_selem_get_capture_volume:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_capture_volume (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long* value
	    )

Return value of capture volume control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - pointer to returned value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga6b5799e7971688e1f2e9ccf977c8a887:
.. _cid-snd_mixer_selem_get_playback_db:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_playback_dB (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long* value
	    )

Return value of playback volume in dB control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - pointer to returned value (dB \* 100)



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga27bf2c4bd591bcf61b3fe20353bac8da:
.. _cid-snd_mixer_selem_get_capture_db:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_capture_dB (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long* value
	    )

Return value of capture volume in dB control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - pointer to returned value (dB \* 100)



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga55a4f32e711efe4ef09cf041d9fc27f0:
.. _cid-snd_mixer_selem_get_playback_switch:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_playback_switch (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    int* value
	    )

Return value of playback switch control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - pointer to returned value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga49f4c3b98ef2353cdaa582e5bf3417a1:
.. _cid-snd_mixer_selem_get_capture_switch:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_capture_switch (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    int* value
	    )

Return value of capture switch control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - pointer to returned value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga1e4556740beefc8bed40677a316e60ac:
.. _cid-snd_mixer_selem_set_playback_volume:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_playback_volume (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long value
	    )

Set value of playback volume control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - control value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga8aa6b212e1e092e5d67ff11070a433ad:
.. _cid-snd_mixer_selem_set_capture_volume:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_capture_volume (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long value
	    )

Set value of capture volume control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - control value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga8bfb52575e4bb06deb30799bc39c0768:
.. _cid-snd_mixer_selem_set_playback_db:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_playback_dB (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long value,
	    int dir
	    )

Set value in dB of playback volume control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - control value in dB \* 100

    *
        - dir

        - rounding mode - rounds up if dir > 0, otherwise rounds down



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1gac1af2ccb94c19e7f616338791707c2eb:
.. _cid-snd_mixer_selem_set_capture_db:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_capture_dB (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    long value,
	    int dir
	    )

Set value in dB of capture volume control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - control value in dB \* 100

    *
        - dir

        - rounding mode - rounds up if dir > 0, otherwise rounds down



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga2567351a2a7a70e6dda81f5ccc38d04b:
.. _cid-snd_mixer_selem_set_playback_volume_all:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_playback_volume_all (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value
	    )

Set value of playback volume control for all channels of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - value

        - control value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga0e6e40f799c9a4042444a4e26194d451:
.. _cid-snd_mixer_selem_set_capture_volume_all:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_capture_volume_all (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value
	    )

Set value of capture volume control for all channels of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - value

        - control value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga555df8c54f170ebe7f389eb7a8d04cc9:
.. _cid-snd_mixer_selem_set_playback_db_all:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_playback_dB_all (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value,
	    int dir
	    )

Set value in dB of playback volume control for all channels of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - value

        - control value in dB \* 100

    *
        - dir

        - rounding mode - rounds up if dir > 0, otherwise rounds down



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga395321949ec6444ca4590f0ca3eac6b0:
.. _cid-snd_mixer_selem_set_capture_db_all:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_capture_dB_all (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long value,
	    int dir
	    )

Set value in dB of capture volume control for all channels of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - value

        - control value in dB \* 100

    *
        - dir

        - rounding mode - rounds up if dir > 0, otherwise rounds down



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga1a9b7c48b94d8cbeffc6847f3b884dcc:
.. _cid-snd_mixer_selem_set_playback_switch:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_playback_switch (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    int value
	    )

Set value of playback switch control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - control value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga3de8f16807b23cdf9399f86a5eb3a353:
.. _cid-snd_mixer_selem_set_capture_switch:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_capture_switch (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    int value
	    )

Set value of capture switch control of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - value

        - control value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1gaa3e28640247b4eef389269b92f5b4a9d:
.. _cid-snd_mixer_selem_set_playback_switch_all:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_playback_switch_all (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    int value
	    )

Set value of playback switch control for all channels of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - value

        - control value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1gad43024c7d21c38cde7b440cdc6a85c07:
.. _cid-snd_mixer_selem_set_capture_switch_all:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_capture_switch_all (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    int value
	    )

Set value of capture switch control for all channels of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - value

        - control value



.. rubric:: Returns:

0 on success otherwise a negative error code

.. _doxid-group___simple_mixer_1ga09557e90c11fbd37aeed30938338698b:
.. _cid-snd_mixer_selem_get_playback_volume_range:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_playback_volume_range (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long* min,
	    long* max
	    )

Get range for playback volume of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - min

        - Pointer to returned minimum

    *
        - max

        - Pointer to returned maximum

.. _doxid-group___simple_mixer_1gad874cffabe541956b610858bcb38ba59:
.. _cid-snd_mixer_selem_get_playback_db_range:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_playback_dB_range (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long* min,
	    long* max
	    )

Get range in dB for playback volume of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - min

        - Pointer to returned minimum (dB \* 100)

    *
        - max

        - Pointer to returned maximum (dB \* 100)

.. _doxid-group___simple_mixer_1gaf4b095372a07bcdf769d74fa73c803d5:
.. _cid-snd_mixer_selem_set_playback_volume_range:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_playback_volume_range (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long min,
	    long max
	    )

Set range for playback volume of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - min

        - minimum volume value

    *
        - max

        - maximum volume value

.. _doxid-group___simple_mixer_1ga95e2624e7aaa7624e89121ce3f63b9dd:
.. _cid-snd_mixer_selem_get_capture_volume_range:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_capture_volume_range (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long* min,
	    long* max
	    )

Get range for capture volume of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - min

        - Pointer to returned minimum

    *
        - max

        - Pointer to returned maximum

.. _doxid-group___simple_mixer_1ga332241fcda7a9364b4d7830b592ba6a5:
.. _cid-snd_mixer_selem_get_capture_db_range:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_capture_dB_range (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long* min,
	    long* max
	    )

Get range in dB for capture volume of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - min

        - Pointer to returned minimum (dB \* 100)

    *
        - max

        - Pointer to returned maximum (dB \* 100)

.. _doxid-group___simple_mixer_1ga608663233daecd6b373aba808f5fc427:
.. _cid-snd_mixer_selem_set_capture_volume_range:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_capture_volume_range (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    long min,
	    long max
	    )

Set range for capture volume of a mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - min

        - minimum volume value

    *
        - max

        - maximum volume value

.. _doxid-group___simple_mixer_1gab367abc11dae3681978c2f831afd1e37:
.. _cid-snd_mixer_selem_is_enumerated:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_is_enumerated (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return true if mixer simple element is an enumerated control.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 normal volume/switch control, 1 enumerated control

.. _doxid-group___simple_mixer_1gaed68ad405d2c2e9447e2fa1d4f5d1107:
.. _cid-snd_mixer_selem_is_enum_playback:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_is_enum_playback (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return true if mixer simple enumerated element belongs to the playback direction.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 no playback direction, 1 playback direction

.. _doxid-group___simple_mixer_1ga90c5c5c0428fd0d6722c5a84348a39b0:
.. _cid-snd_mixer_selem_is_enum_capture:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_is_enum_capture (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return true if mixer simple enumerated element belongs to the capture direction.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

0 no capture direction, 1 capture direction

.. _doxid-group___simple_mixer_1gab803bca4a9c322e1efe87950b62431b3:
.. _cid-snd_mixer_selem_get_enum_items:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_enum_items (:ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem)

Return the number of enumerated items of the given mixer simple element.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle



.. rubric:: Returns:

the number of enumerated items, otherwise a negative error code

.. _doxid-group___simple_mixer_1gacbae7ca76dc02dd172c80f8f704dd8c9:
.. _cid-snd_mixer_selem_get_enum_item_name:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_enum_item_name (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    unsigned int idx,
	    size_t maxlen,
	    char* str
	    )

get the enumerated item string for the given mixer simple element



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - item

        - the index of the enumerated item to query

    *
        - maxlen

        - the maximal length to be stored

    *
        - buf

        - the buffer to store the name string



.. rubric:: Returns:

0 if successful, otherwise a negative error code

.. _doxid-group___simple_mixer_1ga6679dc52033e29b88da32f5bbd45f205:
.. _cid-snd_mixer_selem_get_enum_item:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_get_enum_item (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    unsigned int* idxp
	    )

get the current selected enumerated item for the given mixer simple element



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - itemp

        - the pointer to store the index of the enumerated item



.. rubric:: Returns:

0 if successful, otherwise a negative error code

.. _doxid-group___simple_mixer_1gadcba6291c0382676ee442311c0ff1a8f:
.. _cid-snd_mixer_selem_set_enum_item:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_set_enum_item (
	    :ref:`snd_mixer_elem_t<doxid-group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9>`* elem,
	    :ref:`snd_mixer_selem_channel_id_t<doxid-group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97>` channel,
	    unsigned int idx
	    )

set the current selected enumerated item for the given mixer simple element



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - elem

        - Mixer simple element handle

    *
        - channel

        - mixer simple element channel identifier

    *
        - item

        - the enumerated item index



.. rubric:: Returns:

0 if successful, otherwise a negative error code

.. _doxid-group___simple_mixer_1ga29705a6b18fe910d2b7aeb98531d5056:
.. _cid-snd_mixer_selem_id_sizeof:
.. ref-code-block:: cpp
	:class: title-code-block

	size_t
	snd_mixer_selem_id_sizeof (void)

get size of :ref:`snd_mixer_selem_id_t <doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`



.. rubric:: Returns:

size in bytes

.. _doxid-group___simple_mixer_1gac48d80bc60d03959c43a3ec6caca8498:
.. _cid-snd_mixer_selem_id_malloc:
.. ref-code-block:: cpp
	:class: title-code-block

	int
	snd_mixer_selem_id_malloc (:ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`** ptr)

allocate an invalid :ref:`snd_mixer_selem_id_t <doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>` using standard malloc



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - ptr

        - returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. _doxid-group___simple_mixer_1ga2a6f790706e3ed64e1fb0f61177d13c5:
.. _cid-snd_mixer_selem_id_free:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_mixer_selem_id_free (:ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* obj)

frees a previously allocated :ref:`snd_mixer_selem_id_t <doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - pointer to object to free

.. _doxid-group___simple_mixer_1ga089d6e51b1b92fb51ff2cb771071a169:
.. _cid-snd_mixer_selem_id_copy:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_mixer_selem_id_copy (
	    :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* dst,
	    const :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* src
	    )

copy one :ref:`snd_mixer_selem_id_t <doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>` to another



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - dst

        - pointer to destination

    *
        - src

        - pointer to source

.. _doxid-group___simple_mixer_1gae54797dd9e4382d67718899047fa1087:
.. _cid-snd_mixer_selem_id_get_name:
.. ref-code-block:: cpp
	:class: title-code-block

	const char*
	snd_mixer_selem_id_get_name (const :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* obj)

Get name part of a mixer simple element identifier.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - Mixer simple element identifier



.. rubric:: Returns:

name part

.. _doxid-group___simple_mixer_1gabe5105469fa31b85a52253e709733638:
.. _cid-snd_mixer_selem_id_get_index:
.. ref-code-block:: cpp
	:class: title-code-block

	unsigned int
	snd_mixer_selem_id_get_index (const :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* obj)

Get index part of a mixer simple element identifier.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - Mixer simple element identifier



.. rubric:: Returns:

index part

.. _doxid-group___simple_mixer_1gad127341c44087525e1c715044d7a3919:
.. _cid-snd_mixer_selem_id_set_name:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_mixer_selem_id_set_name (
	    :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* obj,
	    const char* val
	    )

Set name part of a mixer simple element identifier.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - Mixer simple element identifier

    *
        - val

        - name part

.. _doxid-group___simple_mixer_1ga02bf0b9758ed4146eec38cd964b7621d:
.. _cid-snd_mixer_selem_id_set_index:
.. ref-code-block:: cpp
	:class: title-code-block

	void
	snd_mixer_selem_id_set_index (
	    :ref:`snd_mixer_selem_id_t<doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>`* obj,
	    unsigned int val
	    )

Set index part of a mixer simple element identifier.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - obj

        - Mixer simple element identifier

    *
        - val

        - index part

Macros
------

.. _doxid-group___simple_mixer_1gae97a5b8fbc068632409e1459a9476222:
.. _cid-snd_mixer_selem_id_alloca:
.. ref-code-block:: cpp
	:class: title-code-block

	#define snd_mixer_selem_id_alloca(ptr)

allocate an invalid :ref:`snd_mixer_selem_id_t <doxid-group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee>` using standard alloca



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - ptr

        - returned pointer

